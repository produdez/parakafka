---
version: '2'
services:
  zookeeper:
    networks:
      - kafka-net
    image: confluentinc/cp-zookeeper:5.0.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    networks:
      - kafka-net
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka
    labels:
      - 'custom.project=kafkajs-zstd'
      - 'custom.service=kafka'
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'

  kafka1:
    networks:
      - kafka-net
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka1
    labels:
      - 'custom.project=kafkajs-zstd'
      - 'custom.service=kafka1'
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'

  kafka2:
    networks:
      - kafka-net
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka2
    labels:
      - 'custom.project=kafkajs-zstd'
      - 'custom.service=kafka2'
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://localhost:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'

  web-hook-server:
    networks:
      - kafka-net
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
      args:
        tag: parakafka/server
        progress: plain

    container_name: web-hook-server
    depends_on:
      - zookeeper
      - kafka
      - kafka1
      - kafka2
    ports:
      - '3000:3000'
    restart: always
    environment:
      - BOOTSTRAP_BROKERS=kafka:29092 kafka1:29092 kafka2:29092

  # These guys need to be in another docker-compose
  # producer-hochiminh:
  #   build:
  #     context: .
  #     dockerfile: ./docker/producer/Dockerfile
  #     args:
  #       tag: parakafka/producer
  #       progress: plain
  #   environment:
  #     - PRODUCER_NAME=HO CHI MINH CITY
  #   container_name: producer_hochiminh
  #   restart: always
  #   network_mode: host

  # producer-vungtau:
  #   build:
  #     context: .
  #     dockerfile: ./docker/producer/Dockerfile
  #     args:
  #       tag: parakafka/producer
  #       progress: plain
  #   environment:
  #     - PRODUCER_NAME=VUNG TAU PARADISE
  #   container_name: producer_vungtau
  #   restart: always
  #   network_mode: host

  kafka-ui:
    networks:
      - kafka-net
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - kafka1
      - kafka2
      - zookeeper
    ports:
      - '8080:8080'
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092, kafka1:29092, kafka2:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_READONLY: 'false'

networks:
  kafka-net:
    driver: bridge
