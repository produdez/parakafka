---
version: '2'
services:
  zookeeper:
    networks:
      - kafka-net
    image: confluentinc/cp-zookeeper:5.0.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    networks:
      - kafka-net
      # - consumer-net
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka
    labels:
      - 'custom.project=kafkajs-zstd'
      - 'custom.service=kafka'
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9095:9095
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_HOST1:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://10.1.8.3:9092,PLAINTEXT_HOST1://10.1.8.3:9095
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'

  kafka1:
    networks:
      - kafka-net
      # - consumer-net
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka1
    labels:
      - 'custom.project=kafkajs-zstd'
      - 'custom.service=kafka1'
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
      - 9096:9096
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_HOST1:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://10.1.8.3:9093,PLAINTEXT_HOST1://10.1.8.3:9096
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'

  kafka2:
    networks:
      - kafka-net
      # - consumer-net
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka2
    labels:
      - 'custom.project=kafkajs-zstd'
      - 'custom.service=kafka2'
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
      - 9097:9097
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_HOST1:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,PLAINTEXT_HOST://10.1.8.3:9094,PLAINTEXT_HOST1://10.1.8.3:9097
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'

  web-hook-server:
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
      args:
        tag: parakafka/server
        progress: plain

    container_name: web-hook-server
    depends_on:
      - zookeeper
      - kafka
      - kafka1
      - kafka2
      - admin
    restart: always
    network_mode: host
    environment:
      BOOTSTRAP_BROKERS: localhost:9092 localhost:9093 localhost:9094

  # kafka-ui:
  #   networks:
  #     - kafka-net
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-ui
  #   depends_on:
  #     - kafka
  #     - kafka1
  #     - kafka2
  #     - zookeeper
  #     - admin
  #   ports:
  #     - '8080:8080'
  #   restart: always
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: kafka
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092, kafka1:29092, kafka2:29092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #     KAFKA_CLUSTERS_0_READONLY: 'false'

  admin:
    build:
      context: .
      dockerfile: ./docker/admin/Dockerfile
      args:
        tag: parakafka/admin
        progress: plain
    container_name: admin
    depends_on:
      - kafka
      - kafka1
      - kafka2
      - zookeeper
    networks: 
      - kafka-net 
    environment:
      - BOOTSTRAP_BROKERS=kafka:29092 kafka1:29092 kafka2:29092
      - NUMBER_OF_PARTITION=3
      - REPLICATION_FACTOR=2

  # mongo:
  #   image: mongo
  #   networks:
  #     - consumer-net
  #   ports:
  #     - '27017:27017' # NOTE: use for access for plotting
  #   network_mode: host
  #   restart: always
  #   container_name: mongo

networks:
  kafka-net:
    driver: bridge
